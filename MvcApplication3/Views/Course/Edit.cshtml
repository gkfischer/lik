@model MvcApplication3.Models.Course

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Course</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Venue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Venue)
            @Html.ValidationMessageFor(model => model.Venue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Year)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Year)
            @Html.ValidationMessageFor(model => model.Year)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AmountDeposit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AmountDeposit)
            @Html.ValidationMessageFor(model => model.AmountDeposit)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AmountInvoice1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AmountInvoice1)
            @Html.ValidationMessageFor(model => model.AmountInvoice1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AmountInvoice2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AmountInvoice2)
            @Html.ValidationMessageFor(model => model.AmountInvoice2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DepositDueTimeframe)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DepositDueTimeframe)
            @Html.ValidationMessageFor(model => model.DepositDueTimeframe)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Invoice1DueTimeframe)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Invoice1DueTimeframe)
            @Html.ValidationMessageFor(model => model.Invoice1DueTimeframe)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Invoice2DueTimeframe)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Invoice2DueTimeframe)
            @Html.ValidationMessageFor(model => model.Invoice2DueTimeframe)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/localization/globalize.js"></script>
    <script type="text/javascript" src="~/Scripts/localization/globalize/message.js"></script>
    <script type="text/javascript" src="~/Scripts/localization/globalize/number.js"></script>
    <script type="text/javascript" src="~/Scripts/localization/globalize/plural.js"></script>
    <script type="text/javascript" src="~/Scripts/localization/globalize/currency.js"></script>
    @*<script type="text/javascript" src="~/Scripts/localization/globalize/date.js"></script>*@
    <script type="text/javascript" src="~/Scripts/localization/globalize/relative-time.js"></script>
    <script type="text/javascript" src="~/Scripts/localization/globalize/cultures/globalize.culture.de-DE.js"></script>
    <script type="text/javascript">
        (function ($, Globalize) {

            // Tell the validator that we want numbers parsed using Globalize

            $.validator.methods.number = function (value, element) {
                var val = Globalize.parseFloat(value);
                return this.optional(element) || ($.isNumeric(val));
            };

            $.validator.methods.min = function (value, element, param) {
                var val = Globalize.parseFloat(value);
                return this.optional(element) || val >= param;
            };

            $.validator.methods.max = function (value, element, param) {
                var val = Globalize.parseFloat(value);
                return this.optional(element) || val <= param;
            };

            $.validator.methods.range = function (value, element, param) {
                var val = Globalize.parseFloat(value);
                return this.optional(element) || (val >= param[0] && val <= param[1]);
            };

            // Tell the validator that we want dates parsed using Globalize

            //$.validator.methods.date = function (value, element) {
            //    var val = Globalize.parseDate(value);
            //    return this.optional(element) || (val);
            //};

        }(jQuery, Globalize));

        $(document).ready(function () {
            // Set Globalize to german
            Globalize.locale("de-DE");
        });

    </script>
}
